buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        maven { url 'http://nexus.dianrong.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE')

    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.4.RELEASE'
    id 'org.springframework.boot' version '2.0.0.RELEASE'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'maven'

    apply plugin: 'checkstyle'

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    checkstyle {
        toolVersion = '7.1.1'
        ignoreFailures = false
        configFile = file("${rootDir}/config/checkstyle.xml")
    }

    repositories {
        maven { url 'http://nexus.dianrong.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom 'io.spring.platform:platform-bom:Brussels-SR7'
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Edgware.SR2'
        }
    }

    configurations {
        all*.exclude group: 'ch.qos.logback'
        all*.exclude group: 'log4j'
        all*.exclude module: 'commons-logging'
        all*.exclude module: 'slf4j-log4j12'
        all*.exclude module: 'junit'
    }

    dependencies {
        compile 'org.projectlombok:lombok',
                'org.slf4j:slf4j-api',
                'com.google.guava:guava',

                // json serializer
                'com.fasterxml.jackson.core:jackson-annotations:2.8.10',
                'com.fasterxml.jackson.core:jackson-core',
                'com.fasterxml.jackson.core:jackson-databind',
                'com.fasterxml.jackson.jaxrs:jackson-jaxrs-base',
                'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider',
                'com.fasterxml.jackson.datatype:jackson-datatype-jsr310',
                'com.fasterxml.jackson.datatype:jackson-datatype-jdk8',
                'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5',
                'com.fasterxml.jackson.datatype:jackson-datatype-guava',
                'com.fasterxml.jackson.datatype:jackson-datatype-joda',
                'com.fasterxml.jackson.dataformat:jackson-dataformat-csv',
                'com.fasterxml.jackson.dataformat:jackson-dataformat-xml',
                'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml',
                'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.2',
                'com.fasterxml.jackson.module:jackson-module-jaxb-annotations',

                // log facade
                'org.slf4j:jcl-over-slf4j',
                'org.slf4j:jul-to-slf4j',
                'org.slf4j:log4j-over-slf4j',
                'org.slf4j:slf4j-api',

                // force upgrading because of security breach
                // http://www.qingpingshan.com/pc/aq/253858.html
                'org.apache.logging.log4j:log4j-api:2.8.2',
                'org.apache.logging.log4j:log4j-core:2.8.2',
                'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
    }
}

// App
configure(subprojects.findAll() { it.name != 'earth-utils' && it.name != 'earth-common' }) {
    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web') {
            exclude module: 'spring-boot-starter-tomcat'
        }
        compile 'org.springframework.boot:spring-boot-starter-jetty',
                'org.springframework:spring-context-support',
                'org.apache.logging.log4j:log4j-web:2.8.2',
                'org.aspectj:aspectjweaver'

        testCompile 'org.springframework.boot:spring-boot-starter-test'
    }
}

// Services
configure(subprojects.findAll() { it.name == 'earth-user' || it.name == 'earth-payment' || it.name == 'earth-examination' }) {
    dependencies {
        compile project(':earth-utils'),
                project(':earth-common'),
                'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client',
                'org.springframework.boot:spring-boot-starter-actuator',

                // security
                'org.springframework.boot:spring-boot-starter-security',
                'org.springframework.security.oauth:spring-security-oauth2',

                // session
                'org.springframework.session:spring-session',

                // cache&redis
                'com.github.ben-manes.caffeine:caffeine',
                'org.springframework.data:spring-data-keyvalue',
                'org.springframework.data:spring-data-redis',
                'redis.clients:jedis',

                // view data
                'org.springframework:spring-orm',
                'org.springframework.data:spring-data-jpa',
                'javax.transaction:javax.transaction-api',
                'org.hibernate:hibernate-core',
                'org.hibernate:hibernate-entitymanager',
                'org.hibernate:hibernate-java8',
                'com.alibaba:druid:1.1.4',
                'mysql:mysql-connector-java'
    }
}


group 'com.yxedu'
version '1.0.0'
